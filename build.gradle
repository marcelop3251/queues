plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
}

group 'com.github.marcelop3251'
archivesBaseName = "queues-manager"
version '1.0.2'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

sourceSets {
    integrationTest{
        compileClasspath += main.output
        runtimeClasspath += main.output
        resources.srcDir file('src/integrationTest/resources')
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
}

task integrationTest(type: Test) {
    description = 'executando integration test'
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

test {
    testLogging.showStandardStreams = true
    useJUnitPlatform()
}

check.dependsOn integrationTest

integrationTest.mustRunAfter test


dependencies {
    implementation(
            'org.jetbrains.kotlin:kotlin-stdlib-jdk8',
            'com.amazonaws:aws-java-sdk-sqs:1.11.697',
            'com.amazonaws:amazon-sqs-java-messaging-lib:1.0.8',
            'ch.qos.logback:logback-classic:1.2.3',
            "com.natpryce:konfig:1.6.10.0"
    )
    
    testImplementation ('org.junit.jupiter:junit-jupiter:5.4.2',
            'org.assertj:assertj-core:3.11.1',
            'io.mockk:mockk:1.9',
            "org.testcontainers:junit-jupiter:1.12.5",
            "org.testcontainers:localstack:1.12.5",
    )
}

// Signing
apply plugin: 'signing'
signing {
    sign configurations.archives
}

apply plugin: 'maven'

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

uploadArchives {
    repositories {
        mavenDeployer {

            // Sign POM
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            // Destination
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            // Add required metadata to POM
            pom.project {
                name 'Queues Manager'
                packaging 'jar'
                description 'Convenience class for facilitating some common tasks with broker.'
                url 'https://github.com/marcelop3251/queues-manager'

                scm {
                    connection 'scm:git:git://github.com/marcelop3251/queues-manager.git'
                    developerConnection 'scm:git:ssh://github.com/marcelop3251/queues-manager.git'
                    url 'http://github.com/marcelop3251/queues-manager/'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'marcelop3251'
                        name 'Marcelo Garcia Palma'
                        email 'marcelop3251@gmail.com'
                    }
                }
            }
        }
    }
}